//iterative approach
//time complexity: O(log n)
//space complexity: O(1)

class LowestCommonAncestorBSTIterative {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
       while(true){
        if(p.val<root.val && q.val<root.val){
           root= root.left;
        }
        else if(p.val>root.val && q.val>root.val){
           root= root.right;
        }
        else{
            return root;
        }
    }
    }
}
